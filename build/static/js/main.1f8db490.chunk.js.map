{"version":3,"sources":["services.js","index.js"],"names":["baseUrl","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchValue","setSearchValue","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","axios","get","then","response","console","log","data","catch","error","message","success","handleSearchChange","e","target","value","handleNameChange","handleNumberChange","handleSubmit","preventDefault","find","person","name","alert","newObject","number","post","concat","setTimeout","err","addPerson","deletePerson","id","window","confirm","delete","remove","filter","Filter","onChange","PersonForm","onSubmit","type","People","includes","map","idx","toLowerCase","key","onClick","Success","className","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f8db490.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport { getAll, create, update, remove };\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { getAll, create, remove } from \"./services\";\nimport \"./index.css\";\n\nconst App = () => {\n  // the state of our apps\n  const [persons, setPersons] = useState(null);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // asking for data when the component mounts\n  useEffect(() => {\n    getAll()\n      .then((response) => {\n        console.log(\"promise fulfilled\");\n        setPersons(response.data);\n      })\n      .catch((error) => {\n        setErrorMessage(error.message, \"try again\");\n      });\n  }, [setPersons]);\n\n  // inputs handles\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  // handle add person Submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const addPerson = () => {\n      const person = {\n        name: newName,\n        number: newNumber,\n      };\n      create(person)\n        .then((response) => {\n          setPersons(persons.concat(response.data));\n          setSuccessMessage(`added ${person.name}`);\n          setTimeout(function () {\n            setSuccessMessage(null);\n          }, 3000);\n        })\n        .catch((err) => {\n          setErrorMessage(`error when adding ${person.name}`);\n          setTimeout(function () {\n            setErrorMessage(null);\n          }, 3000);\n        });\n\n      setNewName(\"\");\n      setNewNumber(\"\");\n    };\n\n    persons.find((person) => person.name === newName)\n      ? alert(`${newName} has already been registered to your Numberbook`)\n      : addPerson();\n  };\n\n  // Delete person logic\n  const deletePerson = (name, id) => {\n    if (window.confirm(`do you really wanna delete ${name}`)) {\n      remove(id)\n        .then((response) => {\n          setSuccessMessage(`deleted ${name}`);\n          setTimeout(function () {\n            setSuccessMessage(null);\n          }, 3000);\n        })\n        .catch((err) => {\n          setErrorMessage(`${name}'s data is already deleted`);\n          setTimeout(function () {\n            setErrorMessage(null);\n          }, 3000);\n        });\n\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n    return;\n  };\n\n  return (\n    <div>\n      <Success success={successMessage} />\n      <Error error={errorMessage} />\n      <h2>Numberbook</h2>\n      <Filter\n        searchValue={searchValue}\n        handleSearchChange={handleSearchChange}\n      />\n\n      <h3>Add a new</h3>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n      />\n\n      <h3>Numbers</h3>\n      <People\n        deletePerson={deletePerson}\n        persons={persons}\n        searchValue={searchValue}\n      />\n    </div>\n  );\n};\n\n// Components\n\nconst Filter = ({ searchValue, handleSearchChange }) => {\n  return (\n    <div>\n      filter show with:\n      <input value={searchValue} onChange={handleSearchChange} />\n    </div>\n  );\n};\n\nconst PersonForm = ({\n  newName,\n  handleSubmit,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        Number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst People = ({ searchValue, persons, deletePerson }) => {\n  return (\n    <div>\n      {persons\n        ?.filter((person) => person.name.includes(searchValue))\n        ?.map(\n          ({ name, number, id }, idx) =>\n            name.toLowerCase().includes(searchValue) && (\n              <p key={id}>\n                {name} {number}\n                <button onClick={() => deletePerson(name, id)}>delete</button>\n              </p>\n            )\n        )}\n    </div>\n  );\n};\n\nconst Success = ({ success }) => {\n  if (success === null) {\n    return null;\n  }\n\n  return <h6 className=\"success\"> {success}</h6>;\n};\n\nconst Error = ({ error }) => {\n  if (error === null) {\n    return null;\n  }\n\n  return <h6 className=\"error\"> {error}</h6>;\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}